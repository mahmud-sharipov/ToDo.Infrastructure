apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: todo-dev
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: todo-client-service
  namespace: todo-dev
spec:
  ports:
  - port: 1666
    protocol: TCP
    targetPort: 80
  selector:
    app: client
---
apiVersion: v1
kind: Service
metadata:
  name: todo-server-service
  namespace: todo-dev
spec:
  ports:
  - port: 1555
    protocol: TCP
    targetPort: 80
  selector:
    app: server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: client
  name: client
  namespace: todo-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
      - env:
        - name: ASPNETCORE_URLS
          value: http://+:80
        - name: ASPNETCORE_ENVIRONMENT
          value: Development
        - name: TodoApiUrl
          valueFrom:
            configMapKeyRef:
              key: server_url
              name: client-configmap
        image: mahmudsharipov/todoclient:1.0.7
        name: todo-client
        ports:
        - containerPort: 80
        - containerPort: 443
        resources:
          limits:
            cpu: "0.5"
            memory: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: todo-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: postgres-user
              name: postgres-secret
        - name: PGDATA
          value: /var/lib/postgresql/data/todo/
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: postgres-secret
        image: postgres:latest
        name: postgres
        ports:
        - containerPort: 5432
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-storage
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: server
  name: server
  namespace: todo-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
      - env:
        - name: ASPNETCORE_URLS
          value: http://+:80
        - name: ASPNETCORE_ENVIRONMENT
          value: Development
        - name: Database__User
          valueFrom:
            secretKeyRef:
              key: postgres-user
              name: postgres-secret
        - name: Database__Password
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: postgres-secret
        - name: Database__Server
          valueFrom:
            configMapKeyRef:
              key: database_url
              name: server-configmap
        - name: Database__Name
          valueFrom:
            configMapKeyRef:
              key: database_name
              name: server-configmap
        image: mahmudsharipov/todoserver:1.0.0
        name: todo-server
        ports:
        - containerPort: 80
        - containerPort: 443
        resources:
          limits:
            cpu: "0.5"
            memory: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: todo-client-ingress
  namespace: todo-dev
spec:
  ingressClassName: nginx
  rules:
  - host: mahmud.20.219.235.7.nip.io
    http:
      paths:
      - backend:
          service:
            name: todo-client-service
            port:
              number: 1666
        path: /
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: todo-server-ingress
  namespace: todo-dev
spec:
  ingressClassName: nginx
  rules:
  - host: api.mahmud.20.219.235.7.nip.io
    http:
      paths:
      - backend:
          service:
            name: todo-server-service
            port:
              number: 1555
        path: /
        pathType: Prefix
